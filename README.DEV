
====== To Do ======

===== Command =====

[ ] add option to embed elfmake in the current projet (making easier broadcasting of ElfMake)
[ ] add option to call configuration program and get back result in variables
[ ] add special file names to design shortly source and targets
[ ] add option to dump selected variables
[ ] add -j, --jobs N for parallel compilation
[ ] add -q, --question with return code equal to 0 if not update is needed
[ ] add -b, --brief for brief output (work bar + currently processed file)
[X] add -B, --always-make to (re)build all!
[X] add -s, --silent, --quiet for not output
[X] add -t, --time option to show compilation time
[X] add option for dry run
[X] add option to dump recipe database
[X] add option to list goals


===== Engine =====

[ ] provide commands for rule as writing shell commands
[ ] display percentage of build for each action
[ ] add a quiet mode just displaying percentage with a bar
[ ] support invocation from non-top make.py
[ ] add command to support file generation from variable content
[ ] add goal to build a distribution (source, binary, etc)
[ ] add parallel run
[ ] add file update resolution based on file content
[ ] add automatic download of dependencies (from OS or from network)
[X] Path are now iterable if they are directories and return their content. 
[X] add goal to perform installation
[X] add file update resolution based on command matching
[X] add overload for "." to environment
[X] add map for symbolic names (program, library, etc)
[X] add support for building in a different directory
[X]	add "[", "]" syntax to environment

===== Actions =====

[ ] add mode (error, warning, fatal, ...) to show command.
[ ] add makefile() command to create a file containing the given content.
[ ] supports lambdas as action


===== Documentation =====

[ ] build a website
[X] add documentation for use of file attributes and explaining environment resolution


===== Config Module =====

[X] add function to retrieve libraries
[ ] add cygwin identification
[ ] add MacOSX identification
[ ] add OS variable to get unique identifier of OS for binary identification


===== Test Module =====

[ ] document it


===== C Module =====

[ ] add support for lex
[ ] add support for yacc
[ ] add support for LLVM
[ ] add support for VS
[X] add support for automatic dependencies (from compiler)
[X] add support for dynamic libraries / plugin / module
[X] add dependency analysis
[X] add support for static libraries
[X] add support for ".exe" files
[X] document it


===== Install Module =====

[ ] supports string as a regular expression in filters
[ ] make the installation process dependent on the current OS


===== New Modules =====

[ ] Java support
[ ] OCAML support
[ ] Python support
[ ] Ada support
[ ] integrate a packaging system (allowing retrieval and automatically dependency build)


===== Configuration =====

[X] Add dependency system between configurations.
 


